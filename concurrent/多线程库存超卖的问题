volatile 关键字也不管用
synchronized 锁代码块是没用的，要锁方法才有用。所有的案例，这个关键字都是锁的方法，你可以总结一下。
关于库存超卖，多线程对共享变量的处理，更新同步，我之前的理解都是错误的。 
if(a>0){
a--;
｝
a会减出成负数来，这一点，之前一直认为，是1线程判断为真后，突然转到2线程，然后就没有判断了，也就是2嫁接了1线程的判断，这都是错误的。
其实是因为，2线程的if与a--之间，这个a的值又被同步了n次。

针对多线程使用的变量如果不是volatile或者final修饰的，很有可能产生不可预知的结果（另一个线程修改了这个值，但是之后在某线程看到的是修改之前的值）。
其实道理上讲同一实例的同一属性本身只有一个副本。
但是多线程是会缓存值的，本质上，volatile就是不去缓存，直接取值。在线程安全的情况下加volatile会牺牲性能。

