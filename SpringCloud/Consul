20180504-2129 今天用nohup 启动 consul，后面忘记加&  结果 ctrl+C consul服务就挂了  哈哈哈哈哈哈哈哈哈

https://blog.csdn.net/forezp/article/details/70188595

linux 安装 consul   https://blog.csdn.net/harris135/article/details/74178384?utm_source=itdadao&utm_medium=referral
linux  安装的时候要注意 这个 -client后面的IP地址必须是该服务器的内网IP地址
nohup ./consul agent -dev -ui -node=consul-dev -client=10.254.107.136 &   启动的时候记得加上这个nohup 和末尾的& 否则ctrl+c 就杀掉这个服务了

eureka跑一段时间，几个小时吧，就自己死掉了，我自己在滴滴云上面发现有这种情况发生。 那么究竟consul会不会这样呢，我们拭目以待。

https://blog.csdn.net/forezp/article/details/70245644  consul注册发现，有三个重点：
1.要启动consul服务，端口8500
2.添加consul客户端依赖
<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
</dependency>

3,main方法所在类上方添加@EnableDiscoveryClient，服务发现客户端注解

下面这个技能很重要
lsof/netstat命令的一个重要作用： 根据进程查端口， 根据端口查进程
2017年04月09日 21:28:2610694人阅读 评论(2) 收藏  举报
 分类： s2: 软件Develop进阶（938）   s2: 实战Unix/Linux杂项（418）   s2: 后台开发（340）  
版权声明：本文为博主原创文章，转载时请务必注明本文地址， 禁止用于任何商业用途， 否则会用法律维权。 
https://blog.csdn.net/stpeace/article/details/69934763
        我们知道， 根据ps -aux | grep xxx就是很快实现进程名和进程号的互查， 所以我们只说进程号pid就行。 如下示例中， 进程pid常驻。

        1.  根据进程pid查端口：

             lsof -i | grep pid

        2.  根据端口port查进程（某次面试还考过）：

            lsof  -i:port     



        3. 根据进程pid查端口：

           netstat -nap | grep pid

        4.  根据端口port查进程

           netstat -nap | grep port



         从形式上看， netstat -nap 更好记忆， 但lsof的用法也要熟练。
         
 
 eureka 换成consul  滴滴云上面的eureka服务真他娘的不靠谱
三部曲：
 1.换jar包   eureka jar包一定要丢掉，否则会报错
 
 <dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency> -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>org.crazyit.test</groupId>
			<artifactId>sc-commons</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>spring-cloud-starter-consul-discovery</artifactId>
                        </dependency>
</dependencies>
 
 
  2.application文件换配置 
  
  
  
  
  3.主方法入口类换注解 
  
  server:
  port: 8010
spring:
  application:
    name: sc-user-service
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://116.85.53.248:3306/sc_cloud
    username: root
    password: 123456
  cloud:
    consul:
      host: 127.0.0.1
      port: 8500
      discovery:
        healthCheckPath: ${management.contextPath}/health
        healthCheckInterval: 15s
        instance-id: sc-user-service
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000
#eureka:
#  instance:
#    hostname: localhost
#  client:
#    serviceUrl:
#      defaultZone: http://116.85.53.248:8761/eureka/
 
 
 package org.crazyit.test;

import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
//import org.springframework.cloud.netflix.eureka.EnableEurekaClient;

@SpringBootApplication
//@EnableEurekaClient
@EnableDiscoveryClient
public class UserServiceApp {

	public static void main(String[] args) {
		new SpringApplicationBuilder(UserServiceApp.class).run(args);
	}

}
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         
         

