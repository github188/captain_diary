像mysql中的innodb引擎用的就是聚簇索引，Myisam引擎用的是非聚簇索引。
我们知道btree索引是将主键列的数据以二叉树的方式建立起来，方便快速查找，时间复杂度由O(n)缩减到O(log2^n),那么聚簇索引方式，就是建立起来的。
如果是主键索引，
二叉树上除了存放这个索引列数据外，还会存放该行的数据，所以说找到该索引列数据，立刻就找到了该行数据。也就是说该行数据与该行数据是聚集簇拥在
该叶子节点上的。
如果不是主键索引呢，普通列上建的索引叫做次级索引，这个次级索引的叶子节点上存放的是该行数据主键列数据在主键索引上的位置。指向主键二叉树的那个位置的。



非簇拥索引，在Myisam引擎上，我们找到二叉树上的索引数据后，还需要，拿到该数据去数据文件里面查找，这个过程叫回行。
非聚簇索引场景下，二叉树上的叶子节点指向的是行数据存放的物理位置。


对于innoDB来说，
1. 住建索引既存储索引值，又存储行数据；
2. 如果没有主键则会使用unique key作为主键
3.如果没有unique key 做主键，则会系统生成一个内部uid做主键
4. 像innodb中，主键的索引结构树种既存储了主键值，又存储了行数据，这种结构成为 “”聚簇索引“”
在创建表的时候 ，可以定义在表示基于哪一种引擎的。根据需要选择。

----------  聚簇索引的页分裂  http://blog.csdn.net/baochao95/article/details/61924952          --------
 聚簇索引的页分裂
标签： mysqlInnodb聚簇索引二叉树页分裂
2017-03-13 19:15 654人阅读 评论(2) 收藏 举报
 分类： MySQL（19）  
版权声明：本文为博主原创文章，未经博主允许不得转载。
在MySQL中，MyISAM采用的是非聚簇索引的，InnoDB存储引擎是采用聚簇索引的。

聚簇结构的特点：

根据主键查询条目时,不用回行(数据就在主键节点下)
如果碰到不规则数据插入时,造成频繁的页分裂
为什么会产生页分裂？

这是因为聚簇索引采用的是平衡二叉树算法，而且每个节点都保存了该主键所对应行的数据，假设插入数据的主键是自增长的，
那么根据二叉树算法会很快的把该数据添加到某个节点下，而其他的节点不用动；
但是如果插入的是不规则的数据，那么每次插入都会改变二叉树之前的数据状态。从而导致了页分裂。
