![事务传播性](https://github.com/huangleisir/common-pics/blob/master/%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%80%A7.png?raw=true)

这个是图灵学院张飞老师的讲课截图，他这里是这样讲的，因为远程调用银行接口，这里假设银行接口同步返回结果，这里耗时比较久，入过对调用银行接口的
代码也加上事务的话，会造成连接池占用。造成线程长时间在这里阻塞，占用连接资源，因为@Transactional这个是靠数据库连接对象来保证的，，所以这里
如果是调用银行接口同步返回结果的话，那么就不能在这条语句上加事务，并且为了外部事务的方法调用次方法将外部事务加进来，所以这里用propagation.NEVER
来控制。
其实我还是不明白这里取消事务控制跟接口调用耗时太久以及占用连接资源容易被耗尽之间是什么关系，


还有，这个调用银行结果的处理有可能重复处理，上个月在捷顺我曾经写过话费充值的时候，遇到过这个问题们当时用的是乐观锁，版本号来解决这个问题。
