1. 获取log实例  -- 静态工厂方法模式
2. 模板方法模式有点意思 --  可以用在业务类下面业务方法用于处理业务方法与加解密，加签验签的调用关系。
3. 外观模式 -- 很容易掌握，好像很少见，不过理解起来很容易
4.责任链模式 -- 过滤器 Filter运用了该模式，就像原子弹链式反应，一环套一环，里面有个链字，这个字用的很传神。链字的确很传神。就像击鼓传花一样。
5.代理模式 --  这个很常见 尤其是动态代理
6.转换器模式 -- 
7.  观察者模式 -- 
8. 发布订阅模式
9. 策略模式-- 怎么玩的？  策略模式太简单了，我们每天都在用，只要用了多态，就用了策略模式，父类引用，指向子类实例。天天在用的东西，策略模式。
http://blog.csdn.net/u012124438/article/details/70039943   在业务类A下面持有接口I的引用，然后在该业务类的业务方法里面加入参，根据入参来加
逻辑分支，不同的分支用不同的I的实例来处理业务方法。
10.享元模式 -- 
11. 建造型模式  工厂（新至升）方法模式   抽象工厂模式 单例模式 建造者（建造型嘛）模式  原型模式 
12.结构型模式 适配器模式 装饰器模式 外观模式  代理模式  桥接模式  组合模式 享元模式
13.行为性模式  11种 其余   
开闭  接口隔离  里氏替换 迪米特 合成复用 依赖倒置
14. 组合模式  一看就是结构型模式  像文件夹一样的上一个对象逃下一个对象的集合
15. 享元模式  -有点像建造型模式中的单例模式，享元嘛，共享同一个对象，也就是工厂类下面有一个集合类存储不同的对象，当发现该对象已存在时候，
不再新建，直接返回该对象。 比如JDK中的String类的实例化，就用了享元模式，多个相同的字符串其实是同一个实例。
这个博客讲的很清楚。    http://blog.csdn.net/jason0539/article/details/22908915






